;
; Sample CustomAuth.ini
;
; For CustomAuth.dll to function correctly, the following steps
; must be taken:
;
;   - It must be running on at least IIS 6.0
;   - CustomAuth.dll must be installed as a filter
;   - CustomAuth.dll must be installed as a wildcard script map
;   - In the wildcard script map dialog, "verify file exists" must
;     be unchecked.
;   - CustomAuth.dll must be allowed in the IIS MMC Web Service
;     Extensions folder
;   - CustomAuth.ini must exist in the same directory as CustomAuth.dll
;   - If not using the built-in logon and logoff pages, then the
;     specified pages must have ACLs set such that the Internet Guest
;     Account must have access to them
;   - For any pages that require successful logon, set an ACL that
;     denies the anonymous user account read access.
;

[Options]

;
; If UseBuiltInLogonPage is 1, CustomAuth.dll will return a built-in
; HTML response to collect user credentials when a logon is needed.
; If it's 0, then CustomAuth.dll will return a 302 redirect to the
; specified LogonUrl.  The default value is 1.
;

UseBuiltInLogonPage=1

; If UseBuiltInLogoffPage=1, CustomAuth.dll will return a built-in
; HTML response to notify a user of a successful logoff.  If it's 0,
; then CustomAuth.dll will return a 302 redirect to the specified
; LogoffURL.  The default value is 1.
;

UseBuiltInLogoffPage=1

;
; LogonURL specifies the URL for the page which collects credentials
; from the user.  If UseBuiltInLogon is 1, then it will override
; the URL specified here.  The default value is '/Logon.htm'.  Note
; that it is acceptable to use absolute URLs for this setting (ie.
; 'https://myserver/logon.htm').
;

LogonURL=/Logon.htm

;
; LogoffURL specifies the URL for the page to be returned when a
; user logs off.  If UseBuiltInLogoff is 1, then it will overried
; the URL specified here.  The default value is '/Logoff.htm'.  Note
; that it is acceptable to use absolute URLs for this setting (ie.
; 'https://myserver/logoff.htm').

LogoffURL=/logoff.htm

;
; LogonSuccessURL specified the page to which the user will be
; directed in the case of processed logon.  It is recommended that
; this page have an ACL such that the Internet Guest Account does
; not have read access.  In this case, a failed logon attempt will
; effectively redirect the user back to the logon page.  The default
; value is '/'.  Note that it is acceptable to use absolute URLs
; for this setting (ie. 'http://myserver/logonsuccess.htm').
;

LogonSuccessURL=/

;
; LogonTimeout specifies the amount of time, in seconds, that a
; user will remain logged on between requests.  The default value
; is 1200 (20 minutes).  A value of zero disables the logon timeout
; feature.
;

LogonTimeout=1200

; LogonType specifies the type of logon that will be performed when
; a user requests a page.  Possible values are:
;
;   Interactive
;   Batch
;   Network
;   Network_Cleartext
;
; The default value is 'Network_Cleartext'.  Note that the user must have
; been granted the privileges necessary for the specified logon
; type, or else the logon attempt will fail.
;

LogonType=Network_Cleartext

;
; If UseSSLForFormSubmission is 1 and UseBuiltInLogonPage is 1, then
; CustomAuth.dll's built in logon form will be submitted over https.
; If it's zero, then the submission will be done in the clear.
; If https is attempted, and the server is not configured to use SSL,
; then the form submission will fail.  For this reason, the default
; value is 0.  This value is ignored if UseBuiltInLogonPage is 0.
;
;   *** Note that the logon form submission is the only request which
;       contains user credentials in clear text.  If you have SSL
;       configured on your server, then it is strongly suggested
;       that you set this to 1.  If you are using a logon form other
;       than the built-in page, then you should likewise use https
;       in the form action if your server supports SSL.
;

UseSSLForFormSubmission=0

;
; If UseClientIpForEncryption is 1, then CustomAuth.dll will use
; the client's IP address as entropy when it encrypts and
; decrypts the credential cookie.  This will ensure that the cookie
; can only be used by the client to which it was actually sent.
; Note that this setting may cause problems with clients that are
; using an array of proxies, since IIS may see such a client's
; requests as coming from different IP addresses, as the client
; goes through different proxies.  If this value is set to zero,
; then the cookie will work from any client IP address.  In this
; case, it is important that a reasonable LogonTimeout value is
; set, since this is the only defense against someone with a
; network sniffer stealing and reusing the cookie.  The default
; value is 1.
;

UseClientIpForEncryption=1

